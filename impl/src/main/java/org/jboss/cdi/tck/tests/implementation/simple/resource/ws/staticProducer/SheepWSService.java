package org.jboss.cdi.tck.tests.implementation.simple.resource.ws.staticProducer;

import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by Apache CXF 3.0.1
 * 2014-11-18T13:33:48.415+01:00
 * Generated source version: 3.0.1
 * 
 */
@WebServiceClient(name = "SheepWS", 
                  wsdlLocation = "WEB-INF/SheepWS.wsdl",
                  targetNamespace = "http://staticProducer.ws.resource.simple.implementation.tests.tck.cdi.jboss.org/") 
public class SheepWSService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://staticProducer.ws.resource.simple.implementation.tests.tck.cdi.jboss.org/", "SheepWS");
    public final static QName SheepWSEndPointPort = new QName("http://staticProducer.ws.resource.simple.implementation.tests.tck.cdi.jboss.org/", "SheepWSEndPointPort");
    static {
        URL url = null;
        try {
            url = new URL("WEB-INF/SheepWS.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(org.jboss.cdi.tck.tests.implementation.simple.resource.ws.staticProducer.SheepWSService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "WEB-INF/SheepWS.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public SheepWSService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public SheepWSService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public SheepWSService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public SheepWSService(WebServiceFeature... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public SheepWSService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public SheepWSService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }    

    /**
     *
     * @return
     *     returns SheepWS
     */
    @WebEndpoint(name = "SheepWSEndPointPort")
    public SheepWS getSheepWSEndPointPort() {
        return super.getPort(SheepWSEndPointPort, SheepWS.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SheepWS
     */
    @WebEndpoint(name = "SheepWSEndPointPort")
    public SheepWS getSheepWSEndPointPort(WebServiceFeature... features) {
        return super.getPort(SheepWSEndPointPort, SheepWS.class, features);
    }

}
